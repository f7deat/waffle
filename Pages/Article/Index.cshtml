@page
@using Waffle.Models.Components
@using Waffle.Models.Components.Specifications
@model Waffle.Pages.Article.IndexModel
@{
    ViewData["Title"] = "Danh sách bài viết";
    ViewData["Description"] = "Danh sách bài viết hay được biên tập viên lựa chọn";
}

<main class="wf-article__list">
    <div class="container">
        <div class="md:flex gap-4">
            <div class="md:w-2/3">

                <div class="mb-2 flex justify-between items-center">
                    <form class="mb-2" method="get">
                        <div class="border rounded-full flex bg-white">
                            <input type="search" name="searchTerm" placeholder="Tìm kiếm..." class="flex-grow px-4 rounded-full" autocomplete="off">
                            <button type="submit" class="py-2 px-3">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </form>
                    <div class="dropdown">
                        <button class="py-2 font-medium" data-bs-toggle="dropdown" aria-expanded="false" id="drp-sort">
                            <i class="fas fa-sort-amount-up"></i> Sắp xếp
                        </button>
                        <div class="dropdown-menu bg-white shadow dropdown-menu-end shadow-lg rounded" aria-labelledby="drp-sort" style="">
                            <a class="py-2 px-4 flex items-center hover:bg-gray-100 w-full rounded-b" href="?searchTerm=@Model.SearchTerm&orderby=VIEW">Lượt xem</a>
                            <a class="py-2 px-4 flex items-center hover:bg-gray-100 w-full rounded-b" href="?searchTerm=@Model.SearchTerm&orderby=DATE">Thời gian</a>
                        </div>
                    </div>
                </div>

                <div class="title">@ViewData["Title"]</div>
                @if (Model.Articles != null)
                {
                    <partial name="_List.cshtml" model="Model.Articles.Data" />

                    <partial name="~/Pages/Shared/Components/Pagination/Token.cshtml" model="Model.Pagination" />
                }
            </div>
            <div class="md:w-1/3">
                @await Component.InvokeAsync(nameof(ArticleSpotlight))
                @await Component.InvokeAsync(nameof(Tag))
            </div>
        </div>
    </div>
</main>