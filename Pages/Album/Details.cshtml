@page "/album/{normalizedName}"
@using Waffle.Models.Components
@using Waffle.Models.Components.Specifications
@model Waffle.Pages.Album.DetailsModel

<main class="wf-article__detail">
    <div class="container">
        <div class="wf-row gap-4">
            <div class="md:w-2/3">
                @await Component.InvokeAsync(nameof(Breadcrumb), Model.PageData.Id)

                <h1 class="title">@Model.PageData.Name</h1>
                <div class="shadow mb-4">
                    <div class="bg-white p-4">
                        @foreach (var item in Model.Works)
                        {
                            @await Component.InvokeAsync(item.NormalizedName, item.Id)
                        }
                        <div class="wf-delimiter"></div>
                        <div class="mb-2">
                            <i class="fas fa-tag mr-2"></i>
                            @foreach (var item in Model.Tags)
                            {
                                <a href="/tag/@item.NormalizedName" class="wf-badge">@item.Name</a>
                            }
                        </div>
                    </div>
                    <div class="bg-gray-100 px-4 py-2 flex justify-between items-center text-gray-500 text-sm">
                        <div class="flex gap-4">
                            <span>
                                <i class="fas fa-eye mr-1"></i>
                                <span>@Model.PageData.ViewCount.ToString("N0")</span>
                            </span>
                            <span>|</span>
                            <span>
                                <i class="fas fa-calendar mr-1"></i>
                                <span>@Model.PageData.ModifiedDate</span>
                            </span>
                        </div>
                    </div>
                </div>

                <div class="mb-4">
                    @if (Model.IsAuthenticated)
                    {
                        <div class="card">
                            <div class="form-item">
                                <textarea class="form-control"></textarea>
                            </div>
                            <button type="button" class="btn btn-primary">
                                <i class="fa-solid fa-paper-plane-top"></i>
                                <span>Gửi bình luận</span>
                            </button>
                        </div>
                    }
                </div>

            </div>
            <div class="md:w-1/3">
                @await Component.InvokeAsync(nameof(ArticleSpotlight))
                @await Component.InvokeAsync(nameof(Tag))
            </div>
        </div>

        @if (Model.Tags.Any())
        {
            @await Component.InvokeAsync("Related", new Waffle.Entities.WorkItem {
                CatalogId = Model.Tags.OrderBy(x => Guid.NewGuid()).First().Id,
                WorkId = Model.PageData.Id
            })
        }
    </div>
</main>