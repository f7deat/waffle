@using Waffle.Models.Components
@using Waffle.Entities
@model Header

<nav class="navbar navbar-expand-lg shadow mb-4" aria-label="Offcanvas navbar large">
    <div class="container">
        <a class="navbar-brand" href="/"><i class="fa fa-shield-alt"></i> DefZone.Net</a>
        <button class="navbar-toggler border-0" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar2" aria-controls="offcanvasNavbar2" aria-label="Toggle navigation">
            <i class="fas fa-bars"></i>
        </button>
        <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar2" aria-labelledby="offcanvasNavbar2Label">
            <div class="offcanvas-header">
                <h5 class="offcanvas-title" id="offcanvasNavbar2Label"><i class="fa fa-shield-alt"></i> DefZone.Net</h5>
                <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body align-items-center">
                <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
                    <li class="nav-item">
                        <a href="/article" class="@(Model.Catalog.Type == CatalogType.Article ? "nav-link active" : "nav-link")">
                            <i class="fa-solid fa-rss me-1"></i>
                            Feed
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/products" class="@(Model.Catalog.Type == CatalogType.Product ? "nav-link active" : "nav-link")">
                            <i class="fas fa-cart-shopping mr-1"></i>
                            <localize key="shop" />
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/locations" class="@(Model.Catalog.Type == CatalogType.Location ? "nav-link active" : "nav-link")">
                            <i class="fa-solid fa-puzzle-piece mr-1"></i>
                            @CatalogType.Location.ToString()
                        </a>
                    </li>
                    <li class="nav-item dropdown">
                        <a href="/@CatalogType.Video.ToString()" class="@(Model.Catalog.Type == CatalogType.Video ? "nav-link active" : "nav-link")">
                            <i class="fa-solid fa-play mr-1"></i>
                            @CatalogType.Video.ToString()
                        </a>
                    </li>
                </ul>
                <form class="d-flex" role="search" action="/search" method="get">
                    <div class="hidden md:flex items-center rounded-full px-3 gap-2 search-input">
                        <input class="h-full py-2 rounded-full w-64" type="text" placeholder="Nhập từ khóa" aria-label="Search" name="searchTerm" autocomplete="off">
                        <button class="flex items-center justify-center rounded-full" type="submit" aria-label="Tìm kiếm"><i class="fa fa-search"></i></button>
                    </div>
                </form>
                <div class="d-flex gap-2 items-center">
                    <a href="/search" class="btn-icon d-md-none" aria-label="Search">
                        <i class="fas fa-search"></i>
                    </a>
                    <button type="button" class="btn-icon" aria-label="Dark mode">
                        <i class="fas fa-cloud-sun"></i>
                    </button>
                    @if (Model.IsAuthenticated)
                    {
                        <a href="/user/@Model.UserId" class="btn-icon">
                            <i class="fas fa-user"></i>
                        </a>
                        <a href="/shop/cart" class="btn-icon">
                            <i class="fas fa-cart-shopping"></i>
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</nav>