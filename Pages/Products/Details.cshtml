@page "/product/{normalizedName}"
@using Waffle.Models.Components
@using Waffle.Models.Components.Specifications
@model Waffle.Pages.Products.DetailsModel

<main class="container">
    <div class="row">
        <div class="col-md-8">
            @await Component.InvokeAsync(nameof(Breadcrumb))
            <div class="title">@Model.PageData.Name</div>
            <div class="bg-white rounded mb-4">
                <div class="row">
                    <div class="col-md-4">
                        @await Component.InvokeAsync(nameof(ProductImage))
                    </div>
                    <div class="col-md-8">
                        <h1 class="text-xl font-bold mb-2">@Model.PageData.Name</h1>
                        <div class="text-red-500 flex gap-2 text-sm mb-4">
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                        </div>
                        <div class="text-gray-500 mb-2 border-dashed border-b">
                            @Model.PageData.Description
                        </div>
                        <div class="text-gray-500">
                            Lượt xem: @Model.PageData.ViewCount.ToString("N0")
                        </div>
                        <div class="md:flex mb-4 gap-4">
                            <a href="/products/checkout?productIds=@Model.PageData.Id" class="btn btn-primary block mb-2">
                                <i class="fas fa-cart-shopping mr-2"></i>
                                <span>Mua ngay</span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="wf-delimiter"></div>

            <div class="mb-4">
                @if (Model.Editor != null)
                {
                    @await Component.InvokeAsync(Model.Editor.NormalizedName, Model.Editor.Id)
                }
            </div>

            <div class="mb-4">
                <div class="title">
                    <div>Thông tin tiệm tạp hóa <span class="text-red-500">Querencia</span></div>
                </div>
                <ul>
                    <li>
                        <i class="fas fa-location-dot"></i> Thôn Đồng Giá, xã Thiên Hương, huyện Thủy Nguyên, Hải Phòng
                    </li>
                    <li>
                        <i class="fa-solid fa-phone"></i> +(84) 762559696
                    </li>
                </ul>
            </div>

            <div class="bg-white mb-4 rounded">
                <div class="mb-2 font-medium">Tags:</div>
                <div class="flex gap-4">
                    @foreach (var tag in Model.Tags)
                    {
                        <a href="/tag/@tag.NormalizedName" class="px-4 py-1 bg-gray-100 rounded">@tag.Name</a>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="mb-4">
                <div class="title">Liên hệ hợp tác</div>
                <ul>
                    <li>SDT/Zalo: <a href="tel:0762559696">0762559696</a></li>
                    <li>Email: <a href="mailto:f7deat@gmail.com">f7deat@gmail.com</a></li>
                </ul>
            </div>
            @await Component.InvokeAsync(nameof(ArticleSpotlight))
            @await Component.InvokeAsync(nameof(Tag))
            @await Component.InvokeAsync(nameof(Waffle.ExternalAPI.Models.GoogleAggregate.Trend))
        </div>
    </div>
</main>