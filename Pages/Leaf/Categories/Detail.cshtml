@page "/leaf/{category}/{normalizedName}"
@using Waffle.Core.Constants;
@using Waffle.Entities;
@using Waffle.Models.Components;
@using Waffle.ViewComponents;
@model Waffle.Pages.Leaf.Categories.DetailModel

<main class="wf-article__detail">
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                @await Component.InvokeAsync(nameof(Breadcrumb))

                <h1 class="title">@Html.Raw(Model.PageData.Name)</h1>
                <div class="mb-4 bg-white post-body">
                    @if (Model.PageData.Type == CatalogType.WordPress)
                    {
                        @Html.Raw(Model.PostContent)
                    }

                    @if (Model.Components != null)
                    {
                        @foreach (var item in Model.Components)
                        {
                            @await Component.InvokeAsync(item.Name, item.Id)
                        }
                    }

                    @if (Model.HasTag)
                    {
                        <div class="wf-delimiter"></div>
                        <div class="mb-4">
                            <i class="fas fa-tag me-2"></i>
                            @foreach (var item in Model.Tags)
                            {
                                <a href="/tag/@item.NormalizedName" class="bg-gray-100 px-2 py-1 inline-block rounded tag-item">@item.Name</a>
                            }

                        </div>
                    }

                    <div class="bg-gray-100 px-4 py-2 flex justify-between items-center text-muted text-sm">
                        <div class="flex gap-4">
                            <span>
                                <i class="fas fa-eye mr-1"></i>
                                <span>@Model.PageData.ViewCount.ToString("N0")</span>
                            </span>
                            <span>|</span>
                            <span>
                                <i class="fas fa-calendar mr-1"></i>
                                <span>@Model.PageData.ModifiedDate</span>
                            </span>
                        </div>
                    </div>
                </div>
                @await Component.InvokeAsync(ComponentName.Comment)
            </div>
            <div class="col-md-4">
                @await Component.InvokeAsync(nameof(ArticleSpotlight))
                @await Component.InvokeAsync(nameof(Tag))

                @if (Model.ShopeeProducts.LinkList.Any())
                {
                    <div class="mb-4">
                        <div class="title">Sản phẩm mới (@Model.ShopeeProducts.TotalCount)</div>
                        <div class="grid grid-cols-2 gap-4">
                            @foreach (var item in Model.ShopeeProducts.LinkList)
                            {
                                <div class="bg-white">
                                    <div class="card-image">
                                        <img src="@item.Image" alt="@item.LinkName" class="object-cover" loading="lazy" />
                                    </div>
                                    <div class="p-2">
                                        <a href="@item.Link" class="line-clampin">
                                            @item.LinkName
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }

                @await Component.InvokeAsync(nameof(Waffle.ExternalAPI.Models.GoogleAggregate.Trend))
                @await Component.InvokeAsync(nameof(ProductSpotlight))
            </div>
        </div>

        @if (Model.Tags.Any())
        {
            @await Component.InvokeAsync("Related", Model.Tags.Select(x => x.Id))
        }
    </div>
</main>