@page "/career/{category}/{normalizedName?}"
@using Waffle.Core.Constants;
@using Waffle.Entities;
@using Waffle.Extensions;
@using Waffle.Models.Components;
@using Waffle.ViewComponents;
@model Waffle.Pages.Career.DetailModel

@await Component.InvokeAsync(nameof(Breadcrumb))
<main class="career">
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <div class="content">
                    <h1 class="title">@Model.PageData.Name</h1>
                    <div class="mb-2 post-body">
                        <div class="mb-4 d-flex justify-content-end border-top border-dashed pt-2">
                            <a href="#" class="btn btn-primary"><i class="fa-solid fa-bookmark me-1"></i>Lưu việc làm</a>
                        </div>
                        @if (Model.Components != null)
                        {
                            @foreach (var item in Model.Components)
                            {
                                @await Component.InvokeAsync(item.Name, item.Id)
                            }
                        }

                        <div class="mb-4">
                            Địa điểm làm việc: @Model.JobOpportunity?.JobLocation
                        </div>

                        <div class="bg-gray-100 px-4 py-2 flex justify-between items-center text-muted text-sm">
                            <div class="d-flex gap-4">
                                <span>
                                    <i class="fas fa-eye me-1"></i>
                                    <span>@Model.PageData.ViewCount.ToNumber()</span>
                                </span>
                                <span>|</span>
                                <span>
                                    <i class="fas fa-calendar me-1"></i>
                                    <span>@Model.PageData.ModifiedDate</span>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="wf-delimiter"></div>
                    <h3>Ứng tuyển</h3>
                    <div class="border p-4">
                        <form action="/api/career/apply" method="post" enctype="multipart/form-data">
                            <input type="hidden" name="JobId" value="@Model.PageData.Id" />
                            <div class="form-item">
                                <label class="form-label">Hồ sơ <span class="text-danger">*</span></label>
                                <div class="input-group mb-3">
                                    <input type="file" class="form-control" id="resumeFile" name="resumeFile">
                                    <label class="input-group-text" for="resumeFile">
                                        <localize key="upload" />
                                    </label>
                                </div>
                            </div>
                            <div class="form-item">
                                <button type="submit" class="btn btn-primary">Nộp đơn ứng tuyển</button>
                            </div>
                        </form>
                    </div>
                </div>
                @await Component.InvokeAsync(nameof(Comment))
            </div>
            <div class="col-md-4">
                @await Component.InvokeAsync(nameof(ArticleSpotlight))
                @await Component.InvokeAsync(nameof(Tag))

                @await Component.InvokeAsync(nameof(ProductSpotlight))
            </div>
        </div>

        @await Component.InvokeAsync(ComponentName.Related)
    </div>
</main>