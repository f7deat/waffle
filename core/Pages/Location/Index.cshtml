@page
@using Waffle.Extensions;
@using Waffle.Models.Components
@using Waffle.Models.Components.Specifications
@model Waffle.Pages.Location.IndexModel

<main class="container">
    <div class="row talent-network justify-content-center">
        <div class="col-lg-5">
            <div class="title-wrap lazy-bg d-flex justify-content-center align-items-center" style="background-image: url(https://defzone.net/imgs/bg-2.webp);">
                <div class="d-flex position-relative">
                    <div class="quote-left"><img src="https://defzone.net/imgs/quote1.webp" alt="quote1"></div>
                    <h2>Cộng đồng Influencer <span>Gia tăng thu nhập / Đưa thương hiệu của bạn đến cộng đồng</span></h2>
                    <div class="quote-right"><img src="https://defzone.net/imgs/quote2.webp" alt="quote2"></div>
                </div>
            </div>
        </div>
        <div class="col-md-5 d-flex justify-content-end">
            @* <div class="row"> *@
            @*     <div class="col-6 col-sm-4 col-lg-3 col-app-intro"> *@
            @*         <div class="item"> *@
            @*             <div class="image"> *@
            @*                 <a href="/user/register"> *@
            @*                     <img class="lazy-bg" src="https://images.careerviet.vn/logotalent/173x90/logo_1730102833.png" alt="Trường Cao đẳng GTVT Trung ương VI" title="Trường Cao đẳng GTVT Trung ương VI" style=""> *@
            @*                 </a> *@
            @*             </div> *@
            @*         </div> *@
            @*     </div> *@
                
            @* </div> *@
            <a href="/users/register" class="w-full">
                <img src="https://i.imgur.com/7HvYgTu.jpeg" class="img-fluid title-wrap" alt="join us" style="object-fit: cover" />
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <div class="title">@ViewData["Title"]</div>
            @if (Model.Catalogs != null && Model.Catalogs.Data != null)
            {
                <div class="locations grid">
                    @foreach (var item in Model.Catalogs.Data)
                    {
                        <div class="wf-article-item shadow">
                            <a href="@item.Url" class="thumbnail">
                                <img src="@item.Thumbnail" class="thumbnail" alt="@Html.Raw(item.Name)" height="200" loading="lazy" />
                            </a>
                            <div class="wf-article-item__body">
                                <a href="@item.Url" class="fw-medium">@Html.Raw(item.Name)</a>
                                <div class="wf-article-item__body-description">
                                    @Html.Raw(item.Description)
                                </div>
                            </div>
                            <div class="card-footer">
                                <div>
                                    <small class="me-2">
                                        <i class="fas fa-clock"></i>
                                        @item.ModifiedDate
                                    </small>
                                    <small>
                                        <i class="fa fa-eye"></i> @(item.ViewCount.ToNumber())
                                    </small>
                                </div>
                                <div class="dropdown">
                                    <a class="btn-share" href="https://www.google.com/maps/search/@item.Name" aria-label="Share" target="_blank" rel="nofollow">
                                        <i class="fas fa-location-crosshairs"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                @Html.DisplayFor(x => Model.Catalogs.Pagination)
                @foreach (var component in Model.Components)
                {
                    @await Component.InvokeAsync(component.Name, component.Id)
                }
            }
        </div>
        <div class="col-md-4">
            @await Component.InvokeAsync(nameof(ArticleSpotlight))
            @await Component.InvokeAsync(nameof(Tag))
            @await Component.InvokeAsync(nameof(ProductSpotlight))
        </div>
    </div>
</main>