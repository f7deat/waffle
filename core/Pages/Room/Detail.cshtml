@page "/room/{category}/{normalizedName?}"
@using Waffle.Entities
@using Waffle.Extensions
@using Waffle.Models.Components
@model Waffle.Pages.Room.DetailModel

@await Component.InvokeAsync(nameof(Breadcrumb))

<main class="room">
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <h1 class="mb-4">
                    @Model.PageData.Name
                </h1>
                @if (Model.Room != null)
                {
                    <div class="mb-4 post-body">
                        <div class="mb-4">
                            <a class="btn btn-primary" href="@Model.Room.AffiliateLink">Book Now</a>
                        </div>
                        @foreach (var item in Model.Works)
                        {
                            @await Component.InvokeAsync(item.NormalizedName, item.Id)
                        }

                        @if (Model.HasTag)
                        {
                            <div class="wf-delimiter"></div>
                            <div class="mb-4">
                                <i class="fas fa-tag me-2"></i>
                                @foreach (var item in Model.Tags)
                                {
                                    <a href="/tag/@item.NormalizedName" class="bg-gray-100 px-2 py-1 inline-block rounded tag-item">@item.Name</a>
                                }

                            </div>
                        }

                        <div class="bg-gray-100 px-4 py-2 flex justify-between items-center text-muted text-sm">
                            <div class="d-flex gap-4">
                                <span>
                                    <i class="fas fa-eye me-1"></i>
                                    <span>@Model.PageData.ViewCount.ToNumber()</span>
                                </span>
                                <span>|</span>
                                <span>
                                    <i class="fas fa-calendar me-1"></i>
                                    <span>@Model.PageData.ModifiedDate</span>
                                </span>
                            </div>
                        </div>
                    </div>
                }
                @await Component.InvokeAsync(nameof(Comment))
            </div>
            <div class="col-md-4">
                @await Component.InvokeAsync(nameof(ArticleSpotlight))
                @await Component.InvokeAsync(nameof(Tag))
            </div>
        </div>
    </div>
</main>
